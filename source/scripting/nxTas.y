/* This Bison file was machine-generated by BNFC */
%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include "Absyn.H"
typedef struct yy_buffer_state *YY_BUFFER_STATE;
int yyparse(void);
int yylex(void);
YY_BUFFER_STATE TasScriptyy_scan_string(const char *str);
void TasScriptyy_delete_buffer(YY_BUFFER_STATE buf);
int TasScriptyy_mylinenumber;
int TasScriptinitialize_lexer(FILE * inp);
int TasScriptyywrap(void)
{
  return 1;
}
void TasScriptyyerror(const char *str)
{
  extern char *TasScriptyytext;
  fprintf(stderr,"error: line %d: %s at %s\n", 
    TasScriptyy_mylinenumber, str, TasScriptyytext);
}


namespace TasScript
{
static Line* YY_RESULT_Line_ = 0;
Line* pLine(FILE *inp)
{
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Line_;
  }
}
Line* pLine(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(0);
  buf = TasScriptyy_scan_string(str);
  result = yyparse();
  TasScriptyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Line_;
  }
}

static ListCommand* YY_RESULT_ListCommand_ = 0;
ListCommand* pListCommand(FILE *inp)
{
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListCommand_;
  }
}
ListCommand* pListCommand(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(0);
  buf = TasScriptyy_scan_string(str);
  result = yyparse();
  TasScriptyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListCommand_;
  }
}

static Command* YY_RESULT_Command_ = 0;
Command* pCommand(FILE *inp)
{
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Command_;
  }
}
Command* pCommand(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(0);
  buf = TasScriptyy_scan_string(str);
  result = yyparse();
  TasScriptyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Command_;
  }
}

static ControllerType* YY_RESULT_ControllerType_ = 0;
ControllerType* pControllerType(FILE *inp)
{
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ControllerType_;
  }
}
ControllerType* pControllerType(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(0);
  buf = TasScriptyy_scan_string(str);
  result = yyparse();
  TasScriptyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ControllerType_;
  }
}

static Color* YY_RESULT_Color_ = 0;
Color* pColor(FILE *inp)
{
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Color_;
  }
}
Color* pColor(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(0);
  buf = TasScriptyy_scan_string(str);
  result = yyparse();
  TasScriptyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Color_;
  }
}

static Button* YY_RESULT_Button_ = 0;
Button* pButton(FILE *inp)
{
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Button_;
  }
}
Button* pButton(const char *str)
{
  YY_BUFFER_STATE buf;
  int result;
  TasScriptyy_mylinenumber = 1;
  TasScriptinitialize_lexer(0);
  buf = TasScriptyy_scan_string(str);
  result = yyparse();
  TasScriptyy_delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Button_;
  }
}


}
%}

%union
{
  int int_;
  char char_;
  double double_;
  char* string_;
  TasScript::Line* line_;
  TasScript::ListCommand* listcommand_;
  TasScript::Command* command_;
  TasScript::ControllerType* controllertype_;
  TasScript::Color* color_;
  TasScript::Button* button_;
}
%name-prefix="TasScriptyy"
%token _ERROR_
%token TASSCRIPT__SYMB_0    //   ;
%token TASSCRIPT__SYMB_1    //   + 
%token TASSCRIPT__SYMB_2    //    
%token TASSCRIPT__SYMB_3    //   - 
%token TASSCRIPT__SYMB_4    //   ] 
%token TASSCRIPT__SYMB_5    //   [ 
%token TASSCRIPT__SYMB_6    //   ! 
%token TASSCRIPT__SYMB_7    //   pro_controller 
%token TASSCRIPT__SYMB_8    //   rgb(
%token TASSCRIPT__SYMB_9    //   ,
%token TASSCRIPT__SYMB_10    //   )
%token TASSCRIPT__SYMB_11    //   A
%token TASSCRIPT__SYMB_12    //   B
%token TASSCRIPT__SYMB_13    //   DD
%token TASSCRIPT__SYMB_14    //   DL
%token TASSCRIPT__SYMB_15    //   DR
%token TASSCRIPT__SYMB_16    //   DU
%token TASSCRIPT__SYMB_17    //   L
%token TASSCRIPT__SYMB_18    //   LS
%token TASSCRIPT__SYMB_19    //   R
%token TASSCRIPT__SYMB_20    //   RS
%token TASSCRIPT__SYMB_21    //   SL
%token TASSCRIPT__SYMB_22    //   SR
%token TASSCRIPT__SYMB_23    //   X
%token TASSCRIPT__SYMB_24    //   Y
%token TASSCRIPT__SYMB_25    //   ZL
%token TASSCRIPT__SYMB_26    //   ZR

%type <line_> Line
%type <listcommand_> ListCommand
%type <command_> Command
%type <controllertype_> ControllerType
%type <color_> Color
%type <button_> Button

%start Line
%token<int_> _INTEGER_
%token<string_> _IDENT_

%%
Line : ListCommand {  $$ = new TasScript::L($1); TasScript::YY_RESULT_Line_= $$; } 
;
ListCommand : /* empty */ {  $$ = new TasScript::ListCommand(); TasScript::YY_RESULT_ListCommand_= $$; } 
  | ListCommand Command TASSCRIPT__SYMB_0 {  $1->push_back($2) ; $$ = $1 ; TasScript::YY_RESULT_ListCommand_= $$; }
;
Command : TASSCRIPT__SYMB_1 _IDENT_ TASSCRIPT__SYMB_2 ControllerType {  $$ = new TasScript::CAddController($2, $4); TasScript::YY_RESULT_Command_= $$; } 
  | TASSCRIPT__SYMB_3 _IDENT_ {  $$ = new TasScript::CRemoveController($2); TasScript::YY_RESULT_Command_= $$; }
  | TASSCRIPT__SYMB_4 _IDENT_ TASSCRIPT__SYMB_2 Button {  $$ = new TasScript::CSetButton($2, $4); TasScript::YY_RESULT_Command_= $$; }
  | TASSCRIPT__SYMB_5 _IDENT_ TASSCRIPT__SYMB_2 Button {  $$ = new TasScript::CUnsetButton($2, $4); TasScript::YY_RESULT_Command_= $$; }
  | TASSCRIPT__SYMB_6 _INTEGER_ {  $$ = new TasScript::CWait($2); TasScript::YY_RESULT_Command_= $$; }
;
ControllerType : TASSCRIPT__SYMB_7 Color TASSCRIPT__SYMB_2 Color TASSCRIPT__SYMB_2 Color TASSCRIPT__SYMB_2 Color {  $$ = new TasScript::CTProController($2, $4, $6, $8); TasScript::YY_RESULT_ControllerType_= $$; } 
;
Color : TASSCRIPT__SYMB_8 _INTEGER_ TASSCRIPT__SYMB_9 _INTEGER_ TASSCRIPT__SYMB_9 _INTEGER_ TASSCRIPT__SYMB_10 {  $$ = new TasScript::COLRgb($2, $4, $6); TasScript::YY_RESULT_Color_= $$; } 
;
Button : TASSCRIPT__SYMB_11 {  $$ = new TasScript::BButtonA(); TasScript::YY_RESULT_Button_= $$; } 
  | TASSCRIPT__SYMB_12 {  $$ = new TasScript::BButtonB(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_23 {  $$ = new TasScript::BButtonX(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_24 {  $$ = new TasScript::BButtonY(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_17 {  $$ = new TasScript::BBumperL(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_19 {  $$ = new TasScript::BBumperR(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_21 {  $$ = new TasScript::BBumperSL(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_22 {  $$ = new TasScript::BBumperSR(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_25 {  $$ = new TasScript::BTriggerZL(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_26 {  $$ = new TasScript::BTriggerZR(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_16 {  $$ = new TasScript::BDpadUp(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_13 {  $$ = new TasScript::BDpadDown(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_14 {  $$ = new TasScript::BDpadLeft(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_15 {  $$ = new TasScript::BDpadRight(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_18 {  $$ = new TasScript::BStickLeft(); TasScript::YY_RESULT_Button_= $$; }
  | TASSCRIPT__SYMB_20 {  $$ = new TasScript::BStickRight(); TasScript::YY_RESULT_Button_= $$; }
;

